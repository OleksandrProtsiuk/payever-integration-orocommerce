operations:
  payeverpayment_order_payment_transaction_cancel:
    #extends: oro_order_payment_transaction_cancel
    #substitute_operation: oro_order_payment_transaction_cancel
    label: oro.payment.cancel_authorization
    button_options:
      icon: fa-close
    datagrids:
      - order-payment-transactions-grid
    order: 30
    preactions:
      - '@call_service_method':
          service: oro_payment.payment_method.composite_provider
          method: getPaymentMethod
          method_parameters: [ $.data.paymentMethod ]
          attribute: $.paymentMethod
      - '@call_service_method':
          conditions:
            '@and':
              - '@instanceof': [ $.paymentMethod, Payever\Bundle\PaymentBundle\Method\Payever ]
          service: payever.service.payment.allowed_actions
          method: isActionAllowed
          method_parameters: [ $.data, 'cancel' ]
          attribute: $.isActionAllowed
      - '@find_entity':
          class: 'Oro\Bundle\OrderBundle\Entity\Order'
          where:
            id: $.data.entityIdentifier
          attribute: $.order
      - '@call_service_method':
          service: oro_locale.formatter.number
          method: formatCurrency
          method_parameters: [ $.data.amount, $.data.currency ]
          attribute: $.amountWithCurrency
      - '@assign_value': [$.transactionOptions, []]
    preconditions:
      '@and':
        - '@acl_granted': [ 'CHARGE_AUTHORIZED_PAYMENTS', $.order ]
        - '@equal': [ $.data.entity_class, 'Oro\Bundle\OrderBundle\Entity\Order' ]
        - '@equal': [ $.data.action, 'authorize' ]
        #- '@equal': [ $.data.active, true ]
        #- '@equal': [ $.data.successful, true ]
        - '@not_empty': $.paymentMethod
        - '@instanceof': [ $.paymentMethod, 'Payever\Bundle\PaymentBundle\Method\Payever' ]
        - '@equal': [ $.isActionAllowed, true ]
    actions:
      - '@payment_transaction_cancel':
          paymentTransaction: $.data
          transactionOptions: $.transactionOptions
          attribute: $.result
      - '@tree':
          conditions:
            '@equal': [ '$.result[successful]', true ]
          actions:
            - '@translate':
                id: 'oro.order.payment_transaction.note.cancel_authorization.default_message'
                attribute: $.noteDefaultMessage
            - '@add_string_suffix':
                attribute: $.note
                string: $.noteDefaultMessage
                stringSuffix: $.noteMessage
            - '@create_note': [ $.note, $.order ]
            - '@flash_message':
                message: oro.order.payment_transaction.cancel.result.success
                message_parameters:
                  'amount': $.amountWithCurrency
                type: 'success'
      - '@flash_message':
          conditions:
            '@equal': [ '$.result[successful]', false ]
          message: '$.result[message]'
          type: 'error'
    frontend_options:
      title: oro.order.payment_transaction.cancel.title
      template: '@OroOrder/Action/cancelTransaction.html.twig'
      options:
        allowMaximize: false
        okText: oro.order.payment_transaction.cancel.button.okText
        cancelText: oro.order.payment_transaction.cancel.button.resetText

  payeverpayment_order_payment_transaction_cancel_amount:
    #extends: oro_order_payment_transaction_cancel
    #substitute_operation: oro_order_payment_transaction_cancel
    label: payever.payment.cancel_authorization
    button_options:
      icon: fa-close
    datagrids:
      - order-payment-transactions-grid
    order: 30
    preactions:
      - '@call_service_method':
          service: oro_payment.payment_method.composite_provider
          method: getPaymentMethod
          method_parameters: [ $.data.paymentMethod ]
          attribute: $.paymentMethod
      - '@call_service_method':
          conditions:
            '@and':
              - '@instanceof': [ $.paymentMethod, Payever\Bundle\PaymentBundle\Method\Payever ]
          service: payever.service.payment.allowed_actions
          method: isActionAllowed
          method_parameters: [ $.data, 'partialCancel' ]
          attribute: $.isActionAllowed
      - '@find_entity':
          class: 'Oro\Bundle\OrderBundle\Entity\Order'
          where:
            id: $.data.entityIdentifier
          attribute: $.order
      - '@call_service_method':
          conditions:
            '@and':
              - '@instanceof': [ $.paymentMethod, Payever\Bundle\PaymentBundle\Method\Payever ]
          service: payever.service.management.order
          method: getAvailableCancelAmount
          method_parameters: [ $.order ]
          attribute: $.availableAmount
      - '@call_service_method':
          service: payever.formatter.money_value_type
          method: format
          method_parameters: [ 0.1 ]
          attribute: $.minFormattedAmount
      - '@call_service_method':
          service: payever.formatter.money_value_type
          method: format
          method_parameters: [ $.availableAmount ]
          attribute: $.maxFormattedAmount
      - '@trans':
          id: payever.constraints.localized_range.min_message
          attribute: $.minMessage
          params:
            '{min}': $.minFormattedAmount
      - '@trans':
          id: payever.constraints.localized_range.max_message
          attribute: $.maxMessage
          params:
            '{max}': $.maxFormattedAmount
      - '@assign_value':
          conditions:
            '@not_empty': $.cancelAmount
          parameters: [ $.transactionOptions, { 'cancelAmount': $.cancelAmount } ]
    preconditions:
      '@and':
        - '@acl_granted': ['CHARGE_AUTHORIZED_PAYMENTS', $.order]
        - '@equal': [ $.data.entity_class, 'Oro\Bundle\OrderBundle\Entity\Order' ]
        - '@equal': [ $.data.action, 'authorize' ]
        #- '@equal': [ $.data.active, true ]
        #- '@equal': [ $.data.successful, true ]
        - '@not_empty': $.paymentMethod
        - '@instanceof': [$.paymentMethod, 'Payever\Bundle\PaymentBundle\Method\Payever']
        - '@equal': [ $.isActionAllowed, true ]
    attributes:
      noteMessage:
        label: oro.order.action.note_message.label
        type: string
      cancelAmount:
        label: Amount
        type: string
    form_options:
      attribute_fields:
        cancelAmount:
          form_type: Symfony\Component\Form\Extension\Core\Type\NumberType
          options:
            required: true
            constraints:
              - NotBlank: ~
              - Payever\Bundle\PaymentBundle\Validator\Constraints\LocalizedRange:
                  min: $.minFormattedAmount
                  max: $.maxFormattedAmount
                  minMessage: $.minMessage
                  maxMessage: $.maxMessage
        noteMessage:
          form_type: Oro\Bundle\FormBundle\Form\Type\OroResizeableRichTextType
          options:
            required: true
            constraints:
              - NotBlank: ~
      attribute_default_values:
        cancelAmount: $.availableAmount
    actions:
      - '@payment_transaction_cancel':
          paymentTransaction: $.data
          transactionOptions: $.transactionOptions
          attribute: $.result
      - '@flash_message':
          conditions:
            '@equal': [ '$.result[successful]', true ]
          message: oro.order.payment_transaction.cancel.result.success
          message_parameters:
            'amount': $.cancelAmount
          type: 'success'
      - '@flash_message':
          conditions:
            '@equal': [ '$.result[successful]', false ]
          message: '$.result[message]'
          type: 'error'
    frontend_options:
      title: oro.order.payment_transaction.cancel.title
      template: '@PayeverPayment/Action/cancelTransaction.html.twig'
      options:
        allowMaximize: false
        okText: oro.order.payment_transaction.cancel.button.okText
        cancelText: oro.order.payment_transaction.cancel.button.resetText

  payeverpayment_order_payment_transaction_capture:
    extends: oro_order_payment_transaction_capture
    substitute_operation: oro_order_payment_transaction_capture
    preactions:
      - '@call_service_method':
          conditions:
            '@and':
              - '@instanceof': [ $.paymentMethod, Payever\Bundle\PaymentBundle\Method\Payever ]
          service: payever.service.payment.allowed_actions
          method: isActionAllowed
          method_parameters: [ $.data, 'shipping_goods' ]
          attribute: $.isActionAllowed
    preconditions:
      '@and':
        - '@instanceof': [$.paymentMethod, 'Payever\Bundle\PaymentBundle\Method\Payever']
        - '@equal': [ $.isActionAllowed, true ]

  payeverpayment_order_payment_transaction_capture_amount:
    label: payever.payment.capture
    button_options:
      icon: fa-credit-card
    applications: [default]
    datagrids:
      - order-payment-transactions-grid
    order: 30
    preactions:
      - '@call_service_method':
          service: oro_payment.payment_method.composite_provider
          method: getPaymentMethod
          method_parameters: [ $.data.paymentMethod ]
          attribute: $.paymentMethod
      - '@call_service_method':
          conditions:
            '@and':
              - '@instanceof': [ $.paymentMethod, Payever\Bundle\PaymentBundle\Method\Payever ]
          service: payever.service.payment.allowed_actions
          method: isActionAllowed
          method_parameters: [ $.data, 'partialShipping' ]
          attribute: $.isActionAllowed
      - '@find_entity':
          class: 'Oro\Bundle\OrderBundle\Entity\Order'
          where:
            id: $.data.entityIdentifier
          attribute: $.order
      - '@call_service_method':
          conditions:
            '@and':
              - '@instanceof': [ $.paymentMethod, Payever\Bundle\PaymentBundle\Method\Payever ]
          service: payever.service.management.order
          method: getAvailableCaptureAmount
          method_parameters: [ $.order ]
          attribute: $.availableAmount
      - '@call_service_method':
          service: payever.formatter.money_value_type
          method: format
          method_parameters: [ 0.1 ]
          attribute: $.minFormattedAmount
      - '@call_service_method':
          service: payever.formatter.money_value_type
          method: format
          method_parameters: [ $.availableAmount ]
          attribute: $.maxFormattedAmount
      - '@trans':
          id: payever.constraints.localized_range.min_message
          attribute: $.minMessage
          params:
            '{min}': $.minFormattedAmount
      - '@trans':
          id: payever.constraints.localized_range.max_message
          attribute: $.maxMessage
          params:
            '{max}': $.maxFormattedAmount
      - '@assign_value':
          conditions:
            '@not_empty': $.captureAmount
          parameters: [ $.transactionOptions, { 'captureAmount': $.captureAmount } ]
      - '@call_service_method':
          service: oro_locale.formatter.number
          method: formatCurrency
          method_parameters: [ $.data.amount, $.data.currency ]
          attribute: $.amountWithCurrency
    preconditions:
      '@and':
        - '@acl_granted': ['CHARGE_AUTHORIZED_PAYMENTS', $.order]
        - '@equal': [ $.data.entity_class, 'Oro\Bundle\OrderBundle\Entity\Order' ]
        - '@equal': [ $.data.action, 'authorize' ]
        - '@equal': [ $.data.active, true ]
        - '@equal': [ $.data.successful, true ]
        - '@not_empty': $.paymentMethod
        - '@instanceof': [$.paymentMethod, 'Payever\Bundle\PaymentBundle\Method\Payever']
        - '@equal': [ $.isActionAllowed, true ]
    attributes:
      captureAmount:
        label: Amount
        type: string
      noteMessage:
        label: oro.order.action.note_message.label
        type: string
    form_options:
      attribute_fields:
        noteMessage:
          form_type: Oro\Bundle\FormBundle\Form\Type\OroResizeableRichTextType
          options:
            required: true
            constraints:
              - NotBlank: ~
        captureAmount:
          form_type: Symfony\Component\Form\Extension\Core\Type\NumberType
          options:
            required: true
            constraints:
              - NotBlank: ~
              - Payever\Bundle\PaymentBundle\Validator\Constraints\LocalizedRange:
                  min: $.minFormattedAmount
                  max: $.maxFormattedAmount
                  minMessage: $.minMessage
                  maxMessage: $.maxMessage
      attribute_default_values:
        captureAmount: $.availableAmount
    actions:
      - '@payment_transaction_capture':
          paymentTransaction: $.data
          transactionOptions: $.transactionOptions
          attribute: $.result
      - '@flash_message':
          conditions:
            '@equal': [ '$.result[successful]', true ]
          message: oro.order.payment_transaction.capture.result.success
          message_parameters:
            'amount': $.captureAmount
          type: 'success'
      - '@flash_message':
          conditions:
            '@equal': [ '$.result[successful]', false ]
          message: '$.result[message]'
          type: 'error'
    frontend_options:
      title: oro.order.payment_transaction.capture.title
      template: '@PayeverPayment/Action/captureTransaction.html.twig'
      options:
        allowMaximize: false
        okText: oro.order.payment_transaction.capture.button.okText
        cancelText: oro.order.payment_transaction.cancel.button.resetText

  payeverpayment_order_payment_transaction_refund:
    extends: oro_order_payment_transaction_refund
    substitute_operation: oro_order_payment_transaction_refund
    preactions:
      - '@call_service_method':
          conditions:
            '@and':
              - '@instanceof': [ $.paymentMethod, Payever\Bundle\PaymentBundle\Method\Payever ]
          service: payever.service.payment.allowed_actions
          method: isActionAllowed
          method_parameters: [ $.data, 'refund' ]
          attribute: $.isActionAllowed
    preconditions:
      '@and':
        - '@instanceof': [$.paymentMethod, 'Payever\Bundle\PaymentBundle\Method\Payever']
        - '@equal': [ $.isActionAllowed, true ]

  payeverpayment_order_payment_transaction_refund_amount:
    #extends: oro_order_payment_transaction_refund
    label: payever.payment.refund
    button_options:
      icon: fa-share
    applications: [default]
    datagrids:
      - order-payment-transactions-grid
    order: 40
    preactions:
      - '@call_service_method':
          service: oro_payment.payment_method.composite_provider
          method: getPaymentMethod
          method_parameters: [ $.data.paymentMethod ]
          attribute: $.paymentMethod
      - '@call_service_method':
          conditions:
            '@and':
              - '@instanceof': [ $.paymentMethod, Payever\Bundle\PaymentBundle\Method\Payever ]
          service: payever.service.payment.allowed_actions
          method: isActionAllowed
          method_parameters: [ $.data, 'partialRefund' ]
          attribute: $.isActionAllowed
      - '@find_entity':
          class: 'Oro\Bundle\OrderBundle\Entity\Order'
          where:
            id: $.data.entityIdentifier
          attribute: $.order
      - '@call_service_method':
          conditions:
            '@and':
              - '@instanceof': [ $.paymentMethod, Payever\Bundle\PaymentBundle\Method\Payever ]
          service: payever.service.management.order
          method: getAvailableRefundAmount
          method_parameters: [ $.order ]
          attribute: $.availableAmount
      - '@call_service_method':
          service: payever.formatter.money_value_type
          method: format
          method_parameters: [ 0.1 ]
          attribute: $.minFormattedAmount
      - '@call_service_method':
          service: payever.formatter.money_value_type
          method: format
          method_parameters: [ $.availableAmount ]
          attribute: $.maxFormattedAmount
      - '@trans':
          id: payever.constraints.localized_range.min_message
          attribute: $.minMessage
          params:
            '{min}': $.minFormattedAmount
      - '@trans':
          id: payever.constraints.localized_range.max_message
          attribute: $.maxMessage
          params:
            '{max}': $.maxFormattedAmount
      - '@assign_value':
          conditions:
            '@not_empty': $.refundAmount
          parameters: [ $.transactionOptions, { 'refundAmount': $.refundAmount } ]
      - '@call_service_method':
          service: oro_locale.formatter.number
          method: formatCurrency
          method_parameters: [ $.refundAmount, $.data.currency ]
          attribute: $.amountWithCurrency
    preconditions:
      '@and':
        - '@acl_granted': ['REFUND_PAYMENTS', $.order]
        - '@equal': [ $.data.entity_class, 'Oro\Bundle\OrderBundle\Entity\Order' ]
        - '@equal': [ $.data.action, 'capture' ]
        - '@equal': [ $.data.active, false ]
        - '@equal': [ $.data.successful, true ]
        - '@not_empty': $.paymentMethod
        - '@instanceof': [ $.paymentMethod, 'Payever\Bundle\PaymentBundle\Method\Payever' ]
        - '@equal': [ $.isActionAllowed, true ]
    attributes:
      refundAmount:
        label: Amount
        type: string
      noteMessage:
        label: oro.order.action.note_message.label
        type: string
    form_options:
      attribute_fields:
        noteMessage:
          form_type: Oro\Bundle\FormBundle\Form\Type\OroResizeableRichTextType
          options:
            required: true
            constraints:
              - NotBlank: ~
        refundAmount:
          form_type: Symfony\Component\Form\Extension\Core\Type\NumberType
          options:
            required: true
            constraints:
              - NotBlank: ~
              - Payever\Bundle\PaymentBundle\Validator\Constraints\LocalizedRange:
                  min: $.minFormattedAmount
                  max: $.maxFormattedAmount
                  minMessage: $.minMessage
                  maxMessage: $.maxMessage
      attribute_default_values:
        refundAmount: $.availableAmount
    actions:
      - '@payment_transaction_refund':
          paymentTransaction: $.data
          transactionOptions: $.transactionOptions
          attribute: $.result
      - '@tree':
          conditions:
            '@equal': [ '$.result[successful]', true ]
          actions:
            - '@translate':
                id: 'oro.order.payment_transaction.note.refund.default_message'
                attribute: $.noteDefaultMessage
            - '@add_string_suffix':
                attribute: $.note
                string: $.noteDefaultMessage
                stringSuffix: $.noteMessage
            - '@create_note': [ $.note, $.order ]
            - '@flash_message':
                message: oro.order.payment_transaction.refund.result.success
                message_parameters:
                  'amount': $.refundAmount
                type: 'success'
      - '@flash_message':
          conditions:
            '@equal': [ '$.result[successful]', false ]
          message: '$.result[message]'
          type: 'error'
    frontend_options:
      title: oro.order.payment_transaction.refund.title
      template: '@PayeverPayment/Action/refundTransaction.html.twig'
      options:
        allowMaximize: false
        okText: oro.order.payment_transaction.refund.button.okText
        cancelText: oro.order.payment_transaction.refund.button.resetText
